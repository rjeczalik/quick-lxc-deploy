#!/usr/bin/env bash

src=$(cd $(dirname ${0}); pwd)

readonly packages='ifupdown,less,locales,vim,dialog,dhcp3-client,netbase,net-tools,iproute,openssh-server'
#readonly mirror='http://ftp.debian.org/debian'
readonly mirror='http://archive.debian.org/debian'

distro=
arch=

die_usage() {
	echo "usage: quick-lxc-deploy <debian version> <architecture> [<mirror>]"
	echo "example: quick-lxc-deploy etch i386"
	exit 1
}

init() {
	( [ -z "${1}" ] || [ -z "${2}" ] ) && die_usage
	local i=5
	distro=${1}
	arch=${2}
	echo "-- Debian ${distro} (${arch}) is going to be debootstrapped to ${HOME}/lxc/${distro}-${arch}"
	echo -n "-- To cancel press CTRL+C in"
	while [ ${i} -ge 0 ]; do
		echo -n " ${i}"
		let i--
		sleep 1
	done
	echo

	sudo apt-get -y --force-yes install lxc bridge-utils libvirt-bin debootstrap
	for dir in ${HOME}/.ssh ${HOME}/Downloads ${HOME}/lxc; do
		[ -d ${dir} ] || mkdir ${dir}
	done
	if test ! -f ${HOME}/.ssh/lxc_rsa; then
		ssh-keygen -t rsa -N "" -f ${HOME}/.ssh/lxc_rsa
		ssh-add ${HOME}/.ssh/lxc_rsa
	fi
	if sudo test ! -f /root/.ssh/lxc_rsa; then
		sudo ssh-keygen -t rsa -N "" -f /root/.ssh/lxc_rsa
		sudo ssh-add /root/.ssh/lxc_rsa
	fi
}

bridge_wireless() {
	sudo bash -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
	if [ `grep -c -E '^net.ipv4.ip_forward=1' /etc/sysctl.conf` -gt 0 ]; then
		echo "** ip_forward entry already exists in /etc/sysctl.conf!"
	else
		sudo bash -c "echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf"
	fi
	if [ `ifconfig wlan0 2>&1 | grep -c error` -eq 0 ]; then
		sudo /sbin/iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
	fi
}

deploy_lxc_impl() {
	init ${*}

	local hostname="${distro}-${arch}"
	local rootfs="${HOME}/lxc/${hostname}"
	local hwaddr="00`echo ${hostname} | md5sum | perl -ne 'for ($i=0;$i<10;$i+=2) { print ":".substr($_, $i, 2) }'`"
	if [ ! -d "${rootfs}" ]; then
		if [ ! -f ${HOME}/Downloads/${hostname}.tgz ]; then
			debootstrap --verbose --variant=minbase --arch=${arch} --include ${packages} --make-tarball ${HOME}/Downloads/${hostname}.tgz ${distro} `mktemp -d` ${mirror} || exit 1
		fi
		sudo debootstrap --verbose --variant=minbase --arch=${arch} --include ${packages} --unpack-tarball ${HOME}/Downloads/${hostname}.tgz ${distro} ${rootfs} ${mirror} || exit 1
		for dir in {,${rootfs}}/home/${USER}-${hostname}; do
			sudo mkdir -p ${dir}
			sudo chown -R ${USER}:${USER} ${dir}
		done
		# user keys
		mkdir -p /home/${USER}-${hostname}/.ssh
		cp ${HOME}/.ssh/lxc_rsa.pub /home/${USER}-${hostname}/.ssh/authorized_keys
		chmod 700 /home/${USER}-${hostname}/.ssh
		chmod 600 /home/${USER}-${hostname}/.ssh/authorized_keys
		# root keys
		sudo mkdir -p ${rootfs}/root/.ssh
		sudo cp /root/.ssh/lxc_rsa.pub ${rootfs}/root/.ssh/authorized_keys
		sudo chmod 700 ${rootfs}/root/.ssh
		sudo chmod 600 ${rootfs}/root/.ssh/authorized_keys
		sudo bash -c "cat >/etc/lxc/${hostname}.conf <<EOF
lxc.tty = 4
lxc.pts = 1024
lxc.utsname = ${hostname}
lxc.rootfs = ${rootfs}
lxc.cgroup.devices.deny = a
lxc.cgroup.devices.allow = c 1:3 rwm
lxc.cgroup.devices.allow = c 1:5 rwm
lxc.cgroup.devices.allow = c 5:1 rwm
lxc.cgroup.devices.allow = c 5:0 rwm
lxc.cgroup.devices.allow = c 4:0 rwm
lxc.cgroup.devices.allow = c 4:1 rwm
lxc.cgroup.devices.allow = c 1:9 rwm
lxc.cgroup.devices.allow = c 1:8 rwm
lxc.cgroup.devices.allow = c 136:* rwm
lxc.cgroup.devices.allow = c 5:2 rwm
lxc.cgroup.devices.allow = c 254:0 rwm
lxc.mount.entry=proc ${rootfs}/proc proc nodev,noexec,nosuid 0 0
lxc.mount.entry=devpts ${rootfs}/dev/pts devpts defaults 0 0
lxc.mount.entry=sysfs ${rootfs}/sys sysfs defaults 0 0
lxc.mount.entry=/home/${USER}-${hostname} ${rootfs}/home/${USER}-${hostname} none rbind 0 0
lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = lxcbr0
lxc.network.name = eth0
lxc.network.ipv4 = 10.0.3.${arch: -2:2}
lxc.network.hwaddr = ${hwaddr}
EOF"
		sudo ln -s /etc/lxc/${hostname}.conf /etc/lxc/auto/${hostname}.conf
		sudo chmod ugo-x ${rootfs}/etc/init.d/hwclock*
		sudo bash -c "echo ${hostname} > ${rootfs}/etc/hostname"
		sudo bash -c "echo en_US.UTF-8 UTF-8 > ${rootfs}/etc/locale.gen"
		sudo bash -c "cat >${rootfs}/etc/network/interfaces <<EOF
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
EOF"
		sudo sed -i -e's/^5:23:respawn/#5:23:respawn/g' ${rootfs}/etc/inittab
		sudo sed -i -e's/^6:23:respawn/#6:23:respawn/g' ${rootfs}/etc/inittab
		sudo lxc-start -d -n ${hostname} -f /etc/lxc/${hostname}.conf
		sleep 15 # lolwut
		local uid=`id -u ${USER}`
		sudo ${src}/lxcssh ${hostname} "groupadd -g ${uid} ${USER}; useradd -r -s /bin/bash -d /home/${USER}-${hostname} -g ${uid} -u ${uid} ${USER}"
	else
		echo "## Directory ${rootfs} already exist!"
	fi

	if [ `grep -cE '^RUN' /etc/default/lxc` -eq 0 ]; then
		sudo bash -c "cat >>/etc/default/lxc <<EOF
RUN=yes
EOF"
	fi
	if [ `grep -cE '^CONF_DIR' /etc/default/lxc` -eq 0 ]; then
		sudo bash -c "cat >>/etc/default/lxc <<EOF
CONF_DIR=/etc/lxc
EOF"
	fi

	bridge_wireless

	echo "-- Container rootfs: ${HOME}/lxc/${distro}-${arch}"
	echo "-- Container packages tarball: ${HOME}/Downloads/${ditro}-${arch}.tgz"
	echo "-- Container's user home directory: ${HOME}/${USER}-${distro}-${arch}"
	echo "-- For start at boot add ${distro}-${arch} to CONTAINER list in /etc/default/lxc"
}

deploy_lxc_impl ${*}
